tosca_definitions_version: cloudify_dsl_1_3

imports:
  - aws-network.yaml
  - aws-master-vm.yaml
  - aws-kubernetes-node.yaml

inputs:

  aws_access_key_id:
    description: YOUR AWS ACCESS KEY ID

  aws_secret_access_key:
    description: YOUR AWS SECRET ACCESS KEY

  ec2_region_name:
    default: us-east-1

  ec2_region_endpoint:
    default: ec2.us-east-1.amazonaws.com

groups:

 aws_kubernetes_node_group:
   # This is a Kubernetes Node that will be scaled or healed.
   # It includes all of the compenents that will create a fully functioning node.
   members:
     - aws_kubernetes_node_vm
     - aws_docker_kubernetes_node
     - aws_flannel_kubernetes_node
     - aws_kubernetes_node

 aws_scale_up_group:
   members: [aws_kubernetes_node_group]
    # This defines a scale group whose members may be scaled up, incrementing by 1.
    # The scale worflow is called when the following criteria are met
    # The Hyperkube process total CPU will be more than 3 for a total of 10 seconds.
    # No more than 6 hosts will be allowed.
   policies:
     auto_scale_up:
       type: scale_policy_type
       properties:
         policy_operates_on_group: true
         scale_limit: 6
         scale_direction: '<'
         scale_threshold: 8
         service_selector: .*aws_kubernetes_node_vm.*.process.hyperkube.cpu.percent
         cooldown_time: 60
       triggers:
         execute_scale_workflow:
           type: cloudify.policies.triggers.execute_workflow
           parameters:
             workflow: scale
             workflow_parameters:
               delta: 1
               scalable_entity_name: aws_kubernetes_node_group
               scale_compute: true

 aws_scale_down_group:
   # This defines a scale group whose members may be scaled down. Only one host will be removed per run.
   # The scale worflow is called when the following criteria are met
   # The Hyperkube process total CPU will be less than 1 for a total of 200 seconds.
   # No less than 2 hosts will be allowed.
   members: [aws_kubernetes_node_group]
   policies:
     auto_scale_down:
       type: scale_policy_type
       properties:
         scale_limit: 2
         scale_direction: '>'
         scale_threshold: 5
         service_selector: .*aws_kubernetes_node_vm.*.process.hyperkube.cpu.percent
         cooldown_time: 60
         moving_window_size: 200
       triggers:
         execute_scale_workflow:
           type: cloudify.policies.triggers.execute_workflow
           parameters:
             workflow: scale
             workflow_parameters:
               delta: -1
               scalable_entity_name: aws_kubernetes_node_group
               scale_compute: true

 aws_heal_group:
   # This defines a group of hosts in members that may be healed.
   # The heal workflow is called when a the following policy criteria are met.
   # Either the hyperkube process on the host, or the total host CPU need fall silent.
   # The host and all software that it is supposed to have running on it will be healed.
   members: [aws_kubernetes_node_vm]
   policies:
     simple_autoheal_policy:
       type: cloudify.policies.types.host_failure
       properties:
         service:
           - .*aws_kubernetes_node_vm.*.cpu.total.system
           - .*aws_kubernetes_node_vm.*.process.hyperkube.cpu.percent
         interval_between_workflows: 60
       triggers:
         auto_heal_trigger:
           type: cloudify.policies.triggers.execute_workflow
           parameters:
             workflow: heal
             workflow_parameters:
               node_instance_id: { 'get_property': [ SELF, node_id ] }
               diagnose_value: { 'get_property': [ SELF, diagnose ] }
