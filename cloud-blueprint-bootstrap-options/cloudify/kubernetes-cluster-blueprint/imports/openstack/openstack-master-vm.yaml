tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.4/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.3/plugin.yaml

inputs:

  use_existing_openstack_kubernetes_ip:
    default: false

  existing_kubernetes_ip_id:
    default: ''

  use_existing_openstack_kubernetes_master_vm_key:
    default: false

  existing_openstack_kubernetes_master_vm_key_name:
    default: kubernetes_master_vm_key

  master_agent_local_path_to_key_file:
    type: string
    default: ~/.ssh/kubernetes-master-vm-key.pem

  use_existing_openstack_server_for_master_vm:
    default: false

  existing_openstack_server_for_master_vm:
    default: ''

  master_agent_username:
    default: ubuntu

  master_agent_port:
    default: 22

  master_openstack_image_id:
    default: ''

  master_openstack_flavor_id:
    default: ''

dsl_definitions:

  openstack_configuration: &openstack_configuration
    username: { get_input: keystone_username }
    password: { get_input: keystone_password }
    tenant_name: { get_input: keystone_tenant_name }
    auth_url: { get_input: keystone_url }
    region: { get_input: region }
    nova_url: { get_input: nova_url }
    neutron_url: { get_input: neutron_url }

node_templates:

  kubernetes_master_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      use_external_resource: { get_input: use_existing_openstack_kubernetes_ip }
      resource_id: { get_input: existing_kubernetes_ip_id }
      floatingip:
        floating_network_name: { get_input: openstack_external_network_name }
      openstack_config: *openstack_configuration

  openstack_kubernetes_master_vm_key:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      use_external_resource: { get_input: use_existing_openstack_kubernetes_master_vm_key }
      resource_id: { get_input: existing_openstack_kubernetes_master_vm_key_name }
      private_key_path: { get_input: master_agent_local_path_to_key_file }
      openstack_config: *openstack_configuration

  kubernetes_master_vm:
    type: cloudify.openstack.nodes.Server
    properties:
      use_external_resource: { get_input: use_existing_openstack_server_for_master_vm }
      resource_id: { get_input: existing_openstack_server_for_master_vm }
      agent_config:
        env:
          K8S_VERSION: { get_input: your_kubernetes_version }
          ETCD_VERSION: { get_input: your_etcd_version }
          FLANNEL_VERSION: { get_input: your_flannel_version }
          FLANNEL_IFACE: { get_input: flannel_interface }
          FLANNEL_IPMASQ: { get_input: flannel_ipmasq_flag }
        user: { get_input: master_agent_username }
        key: { get_input: master_agent_local_path_to_key_file }
        port: { get_input: master_agent_port }
      server:
        image: { get_input: master_openstack_image_id }
        flavor: { get_input: master_openstack_flavor_id }
        userdata: |
          #!/bin/bash
          sudo groupadd docker
          sudo gpasswd -a ubuntu docker
        security_groups:
          - { get_property: [ openstack_cloudify_group, resource_id ] }
      management_network_name: { get_input: openstack_management_network_name }
      openstack_config: *openstack_configuration
    relationships:
      - target: openstack_cloudify_group
        type: cloudify.openstack.server_connected_to_security_group
      - target: openstack_kubernetes_group
        type: cloudify.openstack.server_connected_to_security_group
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: kubernetes_master_ip
      - target: openstack_kubernetes_master_vm_key
        type: cloudify.openstack.server_connected_to_keypair

outputs:
  kubernetes_info:
    description: Kubernetes Dashboard URL
    value:
      url: {concat: ["http://",{ get_attribute: [ kubernetes_master_ip, floating_ip_address ]},":8080/ui" ] }
